# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

servers:
  - url: https://roads.googleapis.com
tags:
  - Roads API
description: This service returns individual road segments for a given set of GPS coordinates. This services takes up to 100 GPS points and returns the closest road segment for each point. The points passed do not need to be part of a continuous path.
parameters:
  - name: points
    description: |
      The path to be snapped. The path parameter accepts a list of latitude/longitude pairs. Latitude and longitude values should be separated by commas. Coordinates should be separated by the pipe character: "|". For example: `path=60.170880,24.942795|60.170879,24.942796|60.170877,24.942796`.
      Note: The snapping algorithm works best for points that are not too far apart. If you observe odd snapping behavior, try creating paths that have points closer together. To ensure the best snap-to-road quality, you should aim to provide paths on which consecutive pairs of points are within 300m of each other. This will also help in handling any isolated, long jumps between consecutive points caused by GPS signal loss, or noise.
    required: true
    in: query
    style: pipeDelimited
    explode: false
    example:
      ["60.170880,24.942795", "60.170879,24.942796", "60.170877,24.942796"]
    schema:
      $ref: "../schemas/LatLngArrayString.yml"
responses:
  "200":
    description: "For each valid request, the Roads API will return a response in the format indicated within the request URL."
    content:
      application/json:
        schema:
          $ref: "../schemas/NearestRoadsResponse.yml"
  "400":
    description: "For each valid request, the Roads API will return a response in the format indicated within the request URL."
    content:
      application/json:
        examples:
          Bad Request:
            value:
              $ref: "../responses/maps_http_roads_nearest_error_400_response.yml"
        schema:
          $ref: "../schemas/NearestRoadsErrorResponse.yml"
