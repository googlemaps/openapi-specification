# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

servers:
  - url: https://maps.googleapis.com
tags:
  - Directions API
description: The Directions API is a web service that uses an HTTP request to return JSON or XML-formatted directions between locations. You can receive directions for several modes of transportation, such as transit, driving, walking, or cycling.
parameters:
  - name: origin
    description: |
      The place ID, address, or textual latitude/longitude value from which you wish to calculate directions/
      * Place IDs must be prefixed with place_id:. You can retrieve place IDs from the Geocoding API and the Places API (including Place Autocomplete). For an example using place IDs from Place Autocomplete, see Place Autocomplete and Directions. For more about place IDs, see the Place ID overview.
        `origin=place_id:ChIJ3S-JXmauEmsRUcIaWtf4MzE`
      * If you pass an address, the Directions service geocodes the string and converts it to a latitude/longitude coordinate to calculate directions. This coordinate may be different from that returned by the Geocoding API, for example a building entrance rather than its center.
        `origin=24+Sussex+Drive+Ottawa+ON`
        Using place IDs is preferred over using addresses or latitude/longitude coordinates. Using coordinates will always result in the point being snapped to the road nearest to those coordinates - which may not be an access point to the property, or even a road that will quickly or safely lead to the destination.
      * If you pass coordinates, the point will snap to the nearest road. Passing a place ID is preferred. If you do pass coordinates, ensure that no space exists between the latitude and longitude values.
        `origin=41.43206,-81.38992`
      * Plus codes must be formatted as a global code or a compound code. Format plus codes as shown here (plus signs are url-escaped to %2B and spaces are url-escaped to %20). Global code is a 4 character area code and 6 character or longer local code (849VCWC8+R9 is 849VCWC8%2BR9). Compound code is a 6 character or longer local code with an explicit location (CWC8+R9 Mountain View, CA, USA is CWC8%2BR9%20Mountain%20View%20CA%20USA).
    required: true
    in: query
    example: Vancouver, BC
    schema:
      type: string
  - name: destination
    description: "The place ID, address, or textual latitude/longitude value to which you wish to calculate directions. The options for the destination parameter are the same as for the origin parameter."
    required: true
    in: query
    example: "Victoria, BC"
    schema:
      type: string
  - name: mode
    description: |
      When you calculate directions, you may specify the transportation mode to use. By default, directions are calculated as driving directions. If you set the mode to transit you can optionally specify either a departure_time or an arrival_time. If neither time is specified, the departure_time defaults to now (that is, the departure time defaults to the current time).
    in: query
    schema:
      $ref: "../schemas/TravelMode.yml"
  - name: waypoints
    description: |
      Specifies an array of intermediate locations to include along the route between the origin and destination points as pass through or stopover locations. Waypoints alter a route by directing it through the specified location(s). The API supports waypoints for these travel modes: driving, walking and bicycling; not transit. You can specify waypoints using the following values:
      * Place ID: The unique value specific to a location (ChIJGwVKWe5w44kRcr4b9E25-Go).
      * Address string (Charlestown, Boston,MA)
      * Latitude/longitude coordinates (lat/lng): an explicit value pair. (-34.92788%2C138.60008 comma, no space)
      * Encoded polyline that can be specified by a set of any of the above. (enc:lexeF{~wsZejrPjtye@:)
    in: query
    schema:
      type: string
  - name: alternatives
    description: |
      If set to true, specifies that the Directions service may provide more than one route alternative in the response. Note that providing route alternatives may increase the response time from the server. This is only available for requests without intermediate waypoints.
    in: query
    schema:
      type: boolean
  - name: avoid
    description: |
      Indicates that the calculated route(s) should avoid the indicated features. This parameter supports the following arguments:
      * `tolls` indicates that the calculated route should avoid toll roads/bridges.
      * `highways` indicates that the calculated route should avoid highways.
      * `ferries` indicates that the calculated route should avoid ferries.
      * `indoor` indicates that the calculated route should avoid indoor steps for walking and transit directions.
    in: query
    example: highways
    schema:
      type: string
  - name: language
    description: |
      The language in which to return results.
      * See the [list of supported languages](https://developers.google.com/maps/faq#languagesupport). Google often updates the supported languages, so this list may not be exhaustive.
      * If `language` is not supplied, the API attempts to use the preferred language as specified in the `Accept-Language` header, or the native language of the domain from which the request is sent.
      * The API does its best to provide a street address that is readable for both the user and locals. To achieve that goal, it returns street addresses in the local language, transliterated to a script readable by the user if necessary, observing the preferred language. All other addresses are returned in the preferred language. Address components are all returned in the same language, which is chosen from the first component.
      * If a name is not available in the preferred language, the API uses the closest match.
      * The preferred language has a small influence on the set of results that the API chooses to return, and the order in which they are returned. The geocoder interprets abbreviations differently depending on language, such as the abbreviations for street types, or synonyms that may be valid in one language but not in another. For example, _utca_ and _t√©r_ are synonyms for street in Hungarian.
responses:
  "200":
    description: Response for the Distance Matrix API query.
    content:
      application/json:
        examples:
          boston_concord_waypoints_now_response:
            value:
              $ref: "../responses/maps_http_directions_boston_concord_waypoints_now_response.yml"
          boston_concord_waypoints_response:
            value:
              $ref: "../responses/maps_http_directions_boston_concord_waypoints_response.yml"
          boston_concord_waypoints_via_response:
            value:
              $ref: "../responses/maps_http_directions_boston_concord_waypoints_via_response.yml"
          brooklyn_queens_transit_departure_time_response:
            value:
              $ref: "../responses/maps_http_directions_brooklyn_queens_transit_departure_time_response.yml"
          brooklyn_queens_transit_response:
            value:
              $ref: "../responses/maps_http_directions_brooklyn_queens_transit_response.yml"
          chicago_los_angeles_response:
            value:
              $ref: "../responses/maps_http_directions_chicago_los_angeles_response.yml"
          disneyland_response:
            value:
              $ref: "../responses/maps_http_directions_disneyland_response.yml"
          placed_id_response:
            value:
              $ref: "../responses/maps_http_directions_placed_id_response.yml"
          plus_codes_response:
            value:
              $ref: "../responses/maps_http_directions_plus_codes_response.yml"
          region_toledo_default_response:
            value:
              $ref: "../responses/maps_http_directions_region_toledo_default_response.yml"
          region_toledo_es_response:
            value:
              $ref: "../responses/maps_http_directions_region_toledo_es_response.yml"
          sydney_perth_waypoints_latlng_response:
            value:
              $ref: "../responses/maps_http_directions_sydney_perth_waypoints_latlng_response.yml"
          sydney_perth_waypoints_polyline_response:
            value:
              $ref: "../responses/maps_http_directions_sydney_perth_waypoints_polyline_response.yml"
          toronto_montreal_bicycling_response:
            value:
              $ref: "../responses/maps_http_directions_toronto_montreal_bicycling_response.yml"
          toronto_montreal_response:
            value:
              $ref: "../responses/maps_http_directions_toronto_montreal_response.yml"
          waypoints_optimize_response:
            value:
            $ref: "../responses/maps_http_directions_waypoints_optimize_response.yml"
        schema:
          $ref: "../schemas/DirectionsResponse.yml"
