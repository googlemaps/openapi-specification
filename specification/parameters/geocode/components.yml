# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: components
style: pipeDelimited
explode: false
example:
# [START maps_openapi_geocode_param_components_example]
- street_number:1600
- route:Amphitheatre+Parkway
- locality:Mountain+View
- administrative_area_level_1:CA
- country:US
# [END maps_openapi_geocode_param_components_example]
description: |-
  A components filter with elements separated by a pipe (|). The components filter is also accepted as an optional parameter if an address is provided. Each element in the components filter consists of a `component:value` pair, and fully restricts the results from the geocoder.

  The components that can be filtered include:

  * `postal_code` matches `postal_code` and `postal_code_prefix`.
  * `country` matches a country name or a two letter ISO 3166-1 country code. The API follows the ISO standard for defining countries, and the filtering works best when using the corresponding ISO code of the country.
    <aside class="note"><strong>Note</strong>: If you receive unexpected results with a country code, verify that you are using a code which includes the countries, dependent territories, and special areas of geographical interest you intend. You can find code information at Wikipedia: List of ISO 3166 country codes or the ISO Online Browsing Platform.</aside>
    
  The following components may be used to influence results, but will not be enforced:

  * `route` matches the long or short name of a route.
  * `locality` matches against `locality` and `sublocality` types.
  * `administrative_area` matches all the `administrative_area` levels.
    
  Notes about component filtering:

  * Do not repeat these component filters in requests, or the API will return `INVALID_REQUEST`: 
    * `country`
    * `postal_code`
    * `route`
  * If the request contains repeated component filters, the API evaluates those filters as an AND, not an OR.
  * Results are consistent with Google Maps, which occasionally yields unexpected `ZERO_RESULTS` responses. Using Place Autocomplete may provide better results in some use cases. To learn more, see [this FAQ](https://developers..google.com/maps/documentation/geocoding/faq#trbl_component_filtering).
  * For each address component, either specify it in the address parameter or in a components filter, but not both. Specifying the same values in both may result in `ZERO_RESULTS`.

  <div class="note">Note: At least one of `address` or `components` is required.</div>
in: query
schema:
  items:
    type: string
  type: array